import 'package:flutter/material.dart';

void main() {
  runApp(FeedbackApp());
}

class FeedbackApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Feedback Form',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        inputDecorationTheme: InputDecorationTheme(
          border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
        ),
      ),
      home: FeedbackFormPage(),
    );
  }
}

class FeedbackFormPage extends StatefulWidget {
  @override
  _FeedbackFormPageState createState() => _FeedbackFormPageState();
}

class _FeedbackFormPageState extends State<FeedbackFormPage> {
  final _formKey = GlobalKey<FormState>();

  // Form fields
  String name = '';
  String rollNumber = '';
  String feedback = '';
  double rating = 5;
  String selectedCategory = 'General';
  List<String> likedFeatures = [];
  bool agreedToTerms = false;

  final List<String> categories = [
    'General',
    'UI Design',
    'Performance',
    'Features',
    'Bug Report'
  ];

  final Map<String, bool> featureOptions = {
    'Easy to Use': false,
    'Fast Performance': false,
    'Clean UI': false,
    'Useful Features': false,
  };

  void _submitForm() {
    if (_formKey.currentState!.validate() && agreedToTerms) {
      _formKey.currentState!.save();

      likedFeatures = featureOptions.entries
          .where((entry) => entry.value)
          .map((entry) => entry.key)
          .toList();

      // Display collected data in the console
      print('--- Feedback Submitted ---');
      print('Name: $name');
      print('Roll Number: $rollNumber');
      print('Feedback: $feedback');
      print('Rating: $rating');
      print('Category: $selectedCategory');
      print('Liked Features: $likedFeatures');
      print('Agreed to Terms: $agreedToTerms');

      // Show success message
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Feedback submitted successfully!')),
      );
    } else if (!agreedToTerms) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please accept terms and conditions')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Feedback Form'),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              // Name
              TextFormField(
                decoration: InputDecoration(labelText: 'Name'),
                onSaved: (value) => name = value!.trim(),
                validator: (value) =>
                    value!.isEmpty ? 'Please enter your name' : null,
              ),
              SizedBox(height: 16),

              // Roll Number
              TextFormField(
                decoration: InputDecoration(labelText: 'Roll Number'),
                onSaved: (value) => rollNumber = value!.trim(),
                validator: (value) =>
                    value!.isEmpty ? 'Please enter your roll number' : null,
              ),
              SizedBox(height: 16),

              // Feedback
              TextFormField(
                decoration: InputDecoration(labelText: 'Feedback'),
                maxLines: 3,
                onSaved: (value) => feedback = value!.trim(),
              ),
              SizedBox(height: 16),

              // Slider
              Text('Rate your experience: ${rating.toInt()}'),
              Slider(
                value: rating,
                min: 1,
                max: 10,
                divisions: 9,
                label: rating.toInt().toString(),
                onChanged: (value) {
                  setState(() {
                    rating = value;
                  });
                },
              ),
              SizedBox(height: 16),

              // Dropdown
              DropdownButtonFormField<String>(
                value: selectedCategory,
                decoration: InputDecoration(labelText: 'Feedback Category'),
                items: categories
                    .map((cat) => DropdownMenuItem(
                          value: cat,
                          child: Text(cat),
                        ))
                    .toList(),
                onChanged: (value) {
                  setState(() {
                    selectedCategory = value!;
                  });
                },
              ),
              SizedBox(height: 16),

              // Checkboxes
              Text('What did you like?'),
              ...featureOptions.keys.map((feature) {
                return CheckboxListTile(
                  title: Text(feature),
                  value: featureOptions[feature],
                  onChanged: (value) {
                    setState(() {
                      featureOptions[feature] = value!;
                    });
                  },
                );
              }).toList(),
              SizedBox(height: 8),

              // Terms and Conditions
              CheckboxListTile(
                title: Text('I agree to the terms and conditions'),
                value: agreedToTerms,
                onChanged: (value) {
                  setState(() {
                    agreedToTerms = value!;
                  });
                },
              ),

              // Submit Button
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _submitForm,
                child: Text('Submit Feedback'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
